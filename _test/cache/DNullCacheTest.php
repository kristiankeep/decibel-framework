<?php
namespace tests\app\decibel\cache;

use app\decibel\cache\DNullCache;
use app\decibel\health\DHealthCheckResult;
use app\decibel\test\DTestCase;

class TestNullCache extends DNullCache
{
    public function testgetValue($key)
    {
        return $this->getValue($key);
    }

    public function testsetValue($key, $value, $expiry = 0)
    {
        return $this->setValue($key, $value, $expiry);
    }

    public function testremoveValue($key)
    {
        return $this->removeValue($key);
    }
}

/**
 * Test class for DNullCache.
 * Generated by Decibel on 2011-10-31 at 14:07:17.
 */
class DNullCacheTest extends DTestCase
{
    /**
     * @covers app\decibel\cache\DNullCache::isAvailable
     */
    public function testisAvailable()
    {
        $cache = new DNullCache();
        $this->assertFalse($cache->isAvailable());
    }

    /**
     * @covers app\decibel\cache\DNullCache::isRequired
     */
    public function testisRequired()
    {
        $cache = new DNullCache();
        $this->assertFalse($cache->isRequired());
    }

    /**
     * @covers app\decibel\cache\DNullCache::getConfigurationClass
     */
    public function testgetConfigurationClass()
    {
        $cache = new DNullCache();
        $this->assertNull($cache->getConfigurationClass());
    }

    /**
     * @covers app\decibel\cache\DNullCache::getDescription
     */
    public function testgetDescription()
    {
        $this->assertLabel(DNullCache::getDescription(), 'description', DNullCache::class);
    }

    /**
     * @covers app\decibel\cache\DNullCache::getDisplayName
     */
    public function testgetDisplayName()
    {
        $this->assertLabel(DNullCache::getDisplayName(), 'displayName', DNullCache::class);
    }

    /**
     * @covers app\decibel\cache\DNullCache::supportsClustering
     */
    public function testsupportsClustering()
    {
        $cache = new DNullCache();
        $this->assertTrue($cache->supportsClustering());
    }

    /**
     * @covers app\decibel\cache\DNullCache::test
     */
    public function testtest()
    {
        $cache = new DNullCache();
        $result = $cache->test();
        $this->assertInstanceOf('app\\decibel\\utility\\DResult', $result);
        $this->assertFalse($result->isSuccessful());
    }

    /**
     * @covers app\decibel\cache\DNullCache::getValue
     */
    public function testgetValue()
    {
        $cache = new TestNullCache();
        $this->assertNull($cache->testgetValue('key1'));
        $this->assertNull($cache->testgetValue('key2'));
    }

    /**
     * @covers app\decibel\cache\DNullCache::setValue
     */
    public function testsetValue()
    {
        $cache = new TestNullCache();
        $this->assertFalse($cache->testsetValue('key1', 'value1'));
        $this->assertFalse($cache->testsetValue('key2', 'value2'));
    }

    /**
     * @covers app\decibel\cache\DNullCache::removeValue
     */
    public function testremoveValue()
    {
        $cache = new TestNullCache();
        $this->assertFalse($cache->testremoveValue('key1'));
        $this->assertFalse($cache->testremoveValue('key2'));
    }
}
