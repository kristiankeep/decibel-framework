<?php
namespace tests\app\decibel\cache;

use app\decibel\authorise\DGuestUser;
use app\decibel\authorise\DRootUser;
use app\decibel\cache\DPrivilegeCache;
use app\decibel\security\DDefaultSecurityPolicy;
use app\decibel\test\DTestCase;

/**
 * Test class for DPrivilegeCache.
 * Generated by Decibel on 2011-10-31 at 14:07:31.
 */
class DPrivilegeCacheTest extends DTestCase
{
    /**
     * @covers app\decibel\cache\DPrivilegeCache::load
     */
    public function testload()
    {
        $cache = DPrivilegeCache::load();
        $this->assertInstanceOf(DPrivilegeCache::class, $cache);
    }

    /**
     * @covers app\decibel\cache\DPrivilegeCache::set
     * @covers app\decibel\cache\DPrivilegeCache::retrieve
     * @covers app\decibel\cache\DPrivilegeCache::clearCapabilities
     */
    public function testset_guest()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        // Generate random privilege.
        $policy = new DDefaultSecurityPolicy();
        $privilege1 = $policy->generateRandomPassword();
        $privilege2 = $policy->generateRandomPassword();
        $value1 = rand(0, 1);
        $value2 = rand(0, 1);
        // Set, retrieve and remove.
        $user = DGuestUser::create();
        $cache = DPrivilegeCache::load();
        $this->assertNull($cache->retrieve($privilege1, $user));
        $this->assertNull($cache->retrieve($privilege2, $user));
        $this->assertTrue($cache->set($privilege1, $user, $value1));
        $this->assertTrue($cache->set($privilege2, $user, $value2));
        $this->assertSame($value1, $cache->retrieve($privilege1, $user));
        $this->assertSame($value2, $cache->retrieve($privilege2, $user));
        // @todo this isn't currently working?
        //		$userCapabilityCode = DUserCapabilityCode::adapt($user);
        //		$this->assertTrue($cache->clearCapabilities(array($userCapabilityCode->getCapabilityCode())));
        //		$this->assertNull($cache->retrieve($privilege1, $user));
        //		$this->assertNull($cache->retrieve($privilege2, $user));
    }

    /**
     * @covers app\decibel\cache\DPrivilegeCache::retrieve
     */
    public function testretrieve_root()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $user = DRootUser::create();
        $cache = DPrivilegeCache::load();
        $this->assertTrue($cache->retrieve('privilege', $user));
    }
}
