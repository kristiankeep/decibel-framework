<?php
namespace tests\app\decibel\auditing;

use app\decibel\auditing\DAuditRecord;
use app\decibel\configuration\DApplicationMode;
use app\decibel\model\field\DTextField;
use app\decibel\test\DQueryTester;
use app\decibel\test\DTestCase;
use app\decibel\utility\DResult;

class TestAuditRecord extends DAuditRecord
{
    public static function getDisplayName()
    {
        return 'Test Audit Record';
    }

    public static function getDisplayNamePlural()
    {
        return 'Test Audit Records';
    }

    protected function define()
    {
        $test1 = new DTextField('test1', 'Test 1');
        $this->addField($test1);
    }

    public function testGetSaveSql()
    {
        return parent::getSaveSql();
    }

    public function testSetDefaultValues()
    {
        parent::setDefaultValues();
    }
}

/**
 * Test class for DAuditRecord.
 * Generated by Decibel on 2012-04-12 at 09:53:58.
 */
class DAuditRecordTest extends DTestCase
{
    /**
     * @covers app\decibel\auditing\DAuditRecord::delete
     */
    public function testdelete()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load(TestAuditRecord::class);
        $result = $record->delete();

        $this->assertInstanceOf(DResult::class, $result);
        $this->assertFalse($result->isSuccessful());
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::search
     */
    public function testsearch()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $search = TestAuditRecord::search();
        $this->assertInstanceOf('app\\decibel\\auditing\\DAuditSearch', $search);
        $this->assertSame('tests\\app\\decibel\\auditing\\TestAuditRecord', $search->qualifiedName);
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::getId
     */
    public function testGetId()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertSame(0, $record->getId());
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::getRetentionPeriods
     */
    public function testGetRetentionPeriods()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertSame(9, count($record::getRetentionPeriods()));
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::getSaveSql
     */
    public function testGetSaveSql()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertSame("INSERT INTO tests_decibel_auditing_testauditrecord SET `created`='#created#', `createdBy`='#createdBy#', `test1`='#test1#'",
                          $record->testGetSaveSql()
        );
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::purge
     */
    public function testPurge()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertTrue($record->purge());
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::purge
     * @expectedException app\decibel\database\debug\DQueryExecutionException
     */
    public function testPurgeInvalid()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        DQueryTester::create('app\\decibel\\model\\DAuditRecord-purgeRecords')
                    ->setErrorState();
        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $record->purge();
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::purge
     */
    public function testPurgeInvalid_false()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        DApplicationMode::setMode(DApplicationMode::MODE_PRODUCTION);
        DQueryTester::create('app\\decibel\\model\\DAuditRecord-purgeRecords')
                    ->setErrorState();
        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertFalse($record->purge());
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::setDefaultValues
     */
    public function testSetDefaultValues()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $record->testSetDefaultValues();
        $this->assertSame(time(), $record->getFieldValue(DAuditRecord::FIELD_CREATED));
        $this->assertInstanceOf('app\decibel\authorise\DUser', $record->getFieldValue(DAuditRecord::FIELD_CREATED_BY));
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::log
     */
    public function testLog()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $this->assertInstanceOf(DResult::class, $record::log(array('test1' => 'value1')));
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::log
     * @expectedException app\decibel\debug\DInvalidPropertyException
     */
    public function testLog_DInvalidPropertyException()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $record::log(array('test' => 'test'));
    }

    /**
     * @covers app\decibel\auditing\DAuditRecord::log
     * @expectedException app\decibel\model\debug\DInvalidFieldValueException
     */
    public function testLog_DInvalidFieldValueException()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $record = TestAuditRecord::load('tests\\app\\decibel\\auditing\\TestAuditRecord');
        $record::log(array('id' => 'test'));
    }
}
