<?php
namespace tests\app\decibel\security;

use app\decibel\security\DCustomSecurityPolicy;
use app\decibel\security\DSecurityPolicy;
use app\decibel\test\DTestCase;

/**
 * Test class for DCustomSecurityPolicy.
 * Generated by Decibel on 2012-04-12 at 09:06:03.
 */
class DCustomSecurityPolicyTest extends DTestCase
{
    /**
     * @covers app\decibel\security\DCustomSecurityPolicy::__construct
     */
    public function test__construct()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $policy = new DCustomSecurityPolicy();
        $this->assertSame(DSecurityPolicy::AUTH_FACTORS_ONE, $policy->getFieldValue('authFactorRequirement'));
        $this->assertSame(10, $policy->getFieldValue('failedLoginLockout'));
        $this->assertNull($policy->getFieldValue('inactiveLockout'));
        $this->assertSame(10, $policy->getFieldValue('lockoutLength'));
        $this->assertNull($policy->getFieldValue('sessionLimit'));
        $this->assertSame(6, $policy->getFieldValue('minimumPasswordLength'));
        $this->assertSame(DSecurityPolicy::OVERRIDE_STRONGER, $policy->getFieldValue('overrideCondition'));
        $this->assertNull($policy->getFieldValue('passwordLife'));
        $this->assertSame(DSecurityPolicy::PASSWORD_STRENGTH_MEDIUM, $policy->getFieldValue('passwordStrength'));
        $this->assertNull($policy->getFieldValue('rememberedPasswords'));
        $this->assertSame(60, $policy->getFieldValue('sessionTimeout'));
    }

    /**
     * @covers app\decibel\security\DCustomSecurityPolicy::getDescription
     */
    public function testGetDescription()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $policy = new DCustomSecurityPolicy();
        $this->assertLabel($policy->getDescription(), 'description', 'app\\decibel\\security\\DCustomSecurityPolicy');
    }

    /**
     * @covers app\decibel\security\DCustomSecurityPolicy::getName
     */
    public function testGetName()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $policy = new DCustomSecurityPolicy();
        $this->assertLabel($policy->getName(), 'name', 'app\\decibel\\security\\DCustomSecurityPolicy');
    }
}
