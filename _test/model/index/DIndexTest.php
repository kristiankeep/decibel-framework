<?php
namespace tests\app\decibel\model\index;

use app\decibel\configuration\DApplicationMode;
use app\decibel\debug\DDeprecatedException;
use app\decibel\debug\DInvalidPropertyException;
use app\decibel\model\field\DArrayField;
use app\decibel\model\field\DTextField;
use app\decibel\model\index\DIndex;
use app\decibel\test\DTestCase;

/**
 * Test class for DIndex.
 * Generated by Decibel on 2012-04-12 at 09:08:49.
 */
class DIndexTest extends DTestCase
{
    /**
     * @covers app\decibel\model\index\DIndex::__construct
     */
    public function test__construct()
    {
        $index = new DIndex('index', 'Index');
        $this->assertInstanceOf('app\\decibel\\model\\index\\DIndex', $index);
        $this->assertSame('index', $index->getName());
        $this->assertSame('Index', $index->getDisplayName());
        $this->assertSame(array(), $index->getFields());
    }

    /**
     * @covers app\decibel\model\index\DIndex::__get
     */
    public function test__get()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $index = new DIndex('index', 'Index');
        $this->assertSame('index', $index->name);
    }

    /**
     * @covers app\decibel\model\index\DIndex::__get
     */
    public function test__get_invalid()
    {
        $this->setExpectedException(DInvalidPropertyException::class);
        $index = new DIndex('index', 'Index');
        $index->invalid;
    }

    /**
     * @covers app\decibel\model\index\DIndex::__get
     */
    public function testDeprecationThrowsException()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
        $this->setExpectedException(DDeprecatedException::class);
        $index = new DIndex('index', 'Index');
        $index->name;
    }

    /**
     * @covers app\decibel\model\index\DIndex::addField
     * @covers app\decibel\model\index\DIndex::getFields
     */
    public function testaddField()
    {
        $index = new DIndex('index', 'Index');
        $field = new DTextField('test', 'Test');
        $this->assertSame($index, $index->addField($field));
        $this->assertSame(
            array('test' => $field),
            $index->getFields()
        );
    }

    /**
     * @covers app\decibel\model\index\DIndex::getDatabaseIdentifier
     */
    public function testgetDatabaseIdentifier()
    {
        $index = new DIndex('index', 'Index');
        $this->assertSame('INDEX', $index->getDatabaseIdentifier());
    }

    /**
     * @covers app\decibel\model\index\DIndex::getDisplayName
     */
    public function testgetDisplayName()
    {
        $index = new DIndex('index', 'Index');
        $this->assertSame('Index', $index->getDisplayName());
    }

    /**
     * @covers app\decibel\model\index\DIndex::getFieldNamesString
     */
    public function testgetFieldNamesString()
    {
        $index = new DIndex('index', 'Index');
        $field1 = new DTextField('test1', 'Test 1');
        $index->addField($field1);
        $this->assertSame('Test 1', $index->getFieldNamesString());
        $field2 = new DTextField('test2', 'Test 2');
        $index->addField($field2);
        $this->assertSame('Test 1 and Test 2', $index->getFieldNamesString());
        $field3 = new DTextField('test3', 'Test 3');
        $index->addField($field3);
        $this->assertSame('Test 1, Test 2 and Test 3', $index->getFieldNamesString());
    }

    /**
     * @covers app\decibel\model\index\DIndex::getName
     */
    public function testgetName()
    {
        $index = new DIndex('index', 'Index');
        $this->assertSame('index', $index->getName());
    }

    /**
     * @covers app\decibel\model\index\DIndex::getNativeFieldNames
     */
    public function testgetNativeFieldNames()
    {
        $index = new DIndex('index', 'Index');
        $field1 = new DTextField('test1', 'Test 1');
        $index->addField($field1);
        $field2 = new DArrayField('test2', 'Test 2');
        $index->addField($field2);
        $this->assertSame(array('test1'), $index->getNativeFieldNames());
    }

    /**
     * @covers app\decibel\model\index\DIndex::validate
     */
    public function testvalidate()
    {
        $index = new DIndex('index', 'Index');
        $this->assertNull($index->validate());
    }
}
