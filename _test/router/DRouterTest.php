<?php
namespace tests\app\decibel\router;

use app\decibel\authorise\DUser;
use app\decibel\router\DRouter;
use app\decibel\test\DTestCase;

class TestRouter extends DRouter
{
    protected function run()
    {
    }

    public function testreportErrors()
    {
        return $this->reportErrors();
    }

    /**
     * Returns the authenticated user for this request.
     *
     * @return    DUser
     */
    public function getUser()
    {
        // TODO: Implement getUser() method.
    }
}

/**
 * Test class for DRouter.
 * Generated by Decibel on 2011-10-31 at 14:12:38.
 */
class DRouterTest extends DTestCase
{
    public function setUp()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers app\decibel\router\DRouter::profile
     */
    public function testprofile()
    {
        $router = TestRouter::load();
        $this->assertTrue($router->profile());
    }

    /**
     * @covers app\decibel\router\DRouter::load
     */
    public function testload()
    {

        $router = TestRouter::load();
        $this->assertInstanceOf('tests\app\decibel\router\TestRouter', $router);
    }

    /**
     * @covers app\decibel\router\DRouter::__get
     * @expectedException app\decibel\debug\DInvalidPropertyException
     */
    public function testget_error()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $router = TestRouter::load();
        $router->test;
    }

    /**
     * @covers app\decibel\router\DRouter::reportErrors
     */
    public function testreportErrors()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $router = TestRouter::load();
        $this->assertTrue($router->testreportErrors());
    }

    /**
     * @covers app\decibel\router\DRouter::getPriority
     */
    public function testgetPriority()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );

        $this->assertSame(5, TestRouter::getPriority());
    }
}
