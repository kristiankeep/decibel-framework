<?php
namespace tests\app\decibel\registry;

use app\decibel\application\DApp;
use app\decibel\Decibel;
use app\decibel\model\field\DFieldSearch;
use app\decibel\registry\DAppRegistry;
use app\decibel\registry\DClassInformation;
use app\decibel\registry\DFileInformation;
use app\decibel\registry\DGlobalRegistry;
use app\decibel\test\DTestCase;
use PHPUnit_Framework_TestCase;

/**
 * Test class for DClassInformation.
 * Generated by Decibel on 2011-10-31 at 14:12:38.
 */
class DClassInformationTest extends PHPUnit_Framework_TestCase
{
    /** @var DGlobalRegistry */
    private $registry;

    /**
     *
     */
    public function setUp()
    {
        $this->registry = DGlobalRegistry::load();
    }

    /**
     * @covers app\decibel\registry\DClassInformation::generateDebug
     */
    public function testGenerateDebug()
    {
        $information = new DClassInformation($this->registry);
        $debug = $information->generateDebug();

        $this->assertArrayHasKey('classes', $debug);
    }

    /**
     * @covers app\decibel\registry\DClassInformation::__sleep
     */
    public function testSleep()
    {
        $information = new DClassInformation($this->registry);
        $sleep = $information->__sleep();

        $this->assertContains('classes', $sleep);
    }

    /**
     *
     * TODO: Decide what to test in this class
     *
     * @covers app\decibel\registry\DClassInformation::rebuild
     * @covers app\decibel\registry\DClassInformation::loadFromFileInformation
     * @covers app\decibel\registry\DClassInformation::registerClass
     * @covers app\decibel\registry\DClassInformation::reflectClass
     * @covers app\decibel\registry\DClassInformation::getClassDefinitionException
     */
    public function testInitialiseClassInformation()
    {
        $appQualifiedName = Decibel::class;
        /** @var DApp $app */
        $app = new $appQualifiedName();
        // app is immutable
        $appRegistry = DAppRegistry::load($app->setRelativePath(''));
        $information = new DClassInformation($appRegistry);

        // do some assertions..
    }

    /**
     * @covers app\decibel\registry\DClassInformation::getDependencies
     */
    public function testGetDependencies()
    {
        $information = new DClassInformation($this->registry);
        $this->assertSame(array(DFileInformation::class), $information->getDependencies());
    }

    /**
     * @covers app\decibel\registry\DClassInformation::getDependency
     */
    public function testGetFileInformationDependency()
    {
        $information = new DClassInformation($this->registry);
        $qualifiedName = DFileInformation::class;

        $this->assertInstanceOf(
            $qualifiedName,
            $information->getDependency($qualifiedName));
    }

    /**
     * Tests getClassNames by initialising
     *
     * @covers app\decibel\registry\DClassInformation::getClassNames
     */
    public function testGetClassNames()
    {
        $appQualifiedName = Decibel::class;
        /** @var DApp $app */
        $app = new $appQualifiedName();
        // app is immutable
        $appRegistry = DAppRegistry::load($app->setRelativePath(''));
        $information = new DClassInformation($appRegistry);

        $this->assertNotEmpty($information->getClassNames());
    }
}
