<?php
namespace tests\app\decibel\regional;

use app\decibel\regional\DLanguage;
use app\decibel\test\DTestCase;

/**
 * Test class for DLanguage.
 * Generated by Decibel on 2011-10-31 at 14:12:26.
 */
class DLanguageTest extends DTestCase
{
    /**
     * @covers app\decibel\regional\DLanguage::__construct
     * @covers app\decibel\regional\DLanguage::getCode
     * @covers app\decibel\regional\DLanguage::getName
     * @covers app\decibel\regional\DLanguage::getLocalName
     */
    public function test__construct()
    {
        $language = new DLanguage('code', 'name', 'localName');
        $this->assertInstanceOf('app\\decibel\\regional\\DLanguage', $language);
        $this->assertSame('code', $language->getCode());
        $this->assertSame('name', $language->getName());
        $this->assertSame('localName', $language->getLocalName());
    }

    /**
     * @covers app\decibel\regional\DLanguage::__toString
     */
    public function test__toString()
    {
        $language = new DLanguage('code', 'name', 'localName');
        $this->assertSame('name', (string)$language);
    }

    /**
     * @covers app\decibel\regional\DLanguage::getDefaultLanguageCode
     */
    public function testgetDefaultLanguageCode()
    {
        $this->assertSame(
            'en-gb',
            DLanguage::getDefaultLanguageCode()
        );
    }

    /**
     * @covers app\decibel\regional\DLanguage::registerLanguage
     */
    public function testregisterLanguage()
    {
        $output = DLanguage::registerLanguage('code', 'name', 'localName');
        $expectedOutput = new DLanguage('code', 'name', 'localName');
        $this->assertEquals($output, $expectedOutput);
    }

    /**
     * @covers app\decibel\regional\DLanguage::getLanguageCodes
     * @todo   Implement testgetLanguageCodes().
     */
    public function testgetLanguageCodes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers app\decibel\regional\DLanguage::getLanguageInformation
     */
    public function testgetLanguageInformation()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
        $information = DLanguage::getLanguageInformation();
        $this->assertInstanceOf(
            'app\decibel\regional\DLanguage',
            $information['en-gb']
        );
    }

    /**
     * @covers app\decibel\regional\DLanguage::getLanguageInformation
     */
    public function testgetLanguageInformation_invalidCode()
    {
        $information = DLanguage::getLanguageInformation('invalidCode');
        $this->assertSame(
            array(),
            $information
        );
    }

    /**
     * @covers app\decibel\regional\DLanguage::getLanguageNames
     */
    public function testgetLanguageNames()
    {
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
        $names = DLanguage::getLanguageNames();
        $this->assertArrayHasKey(
            'en-gb',
            $names
        );
        $this->assertSame(
            'English (United Kingdom)',
            $names['en-gb']
        );
    }

    /**
     * @covers app\decibel\regional\DLanguage::normaliseLanguage
     * @todo   Implement testnormaliseLanguage().
     */
    public function testnormaliseLanguage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
